/*

Xilinx Vitis v2021.2.0 (64-bit) [Major: 2021, Minor: 2]
SW Build 3363750 on 2021-10-16-13:10:08

Process ID (PID): 14851
License: Customer

Current time: 	Wed Feb 08 16:20:09 CET 2023
Time zone: 	Central European Standard Time (Europe/Madrid)

OS: Ubuntu
OS Version: 5.15.0-48-generic
OS Architecture: amd64
Available processors (cores): 6

Display: :1
Screen size: 1920x1080
Available screens: 1
Available disk space: 67 GB

Java version: 	11.0.11 64-bit
Java home: 	/opt/Xilinx/Vitis/2021.2/tps/lnx64/jre11.0.11_9
Java executable location: 	/opt/Xilinx/Vitis/2021.2/tps/lnx64/jre11.0.11_9/bin/java
Java initial memory (-Xms): 	64 MB
Java maximum memory (-Xmx):	 1,024 MB

Java library paths: /opt/Xilinx/Vitis/2021.2/tps/lnx64/javafx-sdk-11.0.2/lib:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o/Ubuntu/20:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o/Ubuntu:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o:/opt/Xilinx/Vitis/2021.2/tps/lnx64/jre11.0.11_9/lib/:/opt/Xilinx/Vitis/2021.2/tps/lnx64/jre11.0.11_9/lib//server:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o/Ubuntu/20:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o/Ubuntu:/opt/Xilinx/Vitis/2021.2/lib/lnx64.o:/opt/Xilinx/Vitis/2021.2/tps/lnx64/python-3.8.3/lib:/opt/Xilinx/Vitis/2021.2/aietools/lib/lnx64.o:/opt/Xilinx/Vivado/2021.2/bin/../lnx64/tools/dot/lib:/opt/Xilinx/Vitis/2021.2/bin/../lnx64/tools/dot/lib:/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib

Java class paths: /opt/Xilinx/Vitis/2021.2/eclipse/lnx64.o//plugins/org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar
LD_LIBRARY_PATH: /opt/Xilinx/Vitis

User name: 	ispr
User home directory: /home/ispr
User working directory: /home/ispr/Documentos/ispr/tutorials/lab1
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: /opt/Xilinx/Vitis
HDI_APPROOT: /opt/Xilinx/Vitis/2021.2
RDI_DATADIR: /opt/Xilinx/Vitis/2021.2/data
RDI_BINDIR: /opt/Xilinx/Vitis/2021.2/bin

Vitis preferences directory: /home/ispr/.Xilinx/Vitis/2021.2/
Vitis workspace directory: /home/ispr/Documentos/ispr/tutorials/lab1/sw/workspace
Vitis workspace log file location: /home/ispr/Documentos/ispr/tutorials/lab1/sw/workspace/.metadata/.log
Engine tmp dir: 	

Xilinx Environment Variables
----------------------------
XILINX_DSP: 
XILINX_HLS: /opt/Xilinx/Vitis_HLS/2021.2
XILINX_PLANAHEAD: /opt/Xilinx/Vitis/2021.2
XILINX_SDK: /opt/Xilinx/Vitis/2021.2
XILINX_VITIS: /opt/Xilinx/Vitis/2021.2
XILINX_VIVADO: /opt/Xilinx/Vivado/2021.2
XILINX_VIVADO_HLS: /opt/Xilinx/Vivado/2021.2
_RDI_DONT_SET_XILINX_AS_PATH: True


Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

*/

selectMenuItem("File", "WorkbenchWindow", "MenuItem.FILE");
selectMenuItem("New", "WorkbenchWindow", "MenuItem.NEW");
selectMenuItem("Application Project", "WorkbenchWindow", "MenuItem.APPLICATION_PROJECT");
selectCheckBox("Skip welcome page next time", Boolean.TRUE, "New Application Project (Create a New Application Project)", "NewAppProjectWizard", "Button.SKIP_WELCOME_PAGE");
selectCheckBox("Skip welcome page next time", Boolean.FALSE, "New Application Project (Create a New Application Project)", "NewAppProjectWizard", "Button.SKIP_WELCOME_PAGE");
selectButton("Next", "New Application Project (Create a New Application Project)", "NewAppProjectWizard", "Button.NEXT");
selectTab("Create a new platform from hardware", "New Application Project (Platform)", "NewAppProjectWizard", "CTabItem.CREATE_A_NEW_PLATFORM");
selectButton("Browse", "New Application Project (Platform)", "NewAppProjectWizard", "Button.BROWSE");
setFileDialog("/home/ispr/Documentos/ispr/tutorials/lab1/hw/system_wrapper.xsa", "Create Platform from XSA", "SDXFileDialog", "Button.OK");
selectCheckBox("Generate boot components", Boolean.FALSE, "New Application Project (Platform)", "NewAppProjectWizard", "Button.GENERATE_BOOT_COMPONENTS");
selectButton("Next", "New Application Project (Platform)", "NewAppProjectWizard", "Button.NEXT");
setTextField("lab1", "New Application Project (Application Project Details)", "NewAppProjectWizard", "Text.APPLICATION_PROJECT_NAME");
selectTreeTable("ps7_cortexa9_0", "New Application Project (Application Project Details)", "NewAppProjectWizard", "ProjectDetailsPage");
selectTreeTable("ps7_cortexa9_1", "New Application Project (Application Project Details)", "NewAppProjectWizard", "ProjectDetailsPage");
selectTreeTable("ps7_cortexa9 SMP", "New Application Project (Application Project Details)", "NewAppProjectWizard", "ProjectDetailsPage");
selectTreeTable("ps7_cortexa9_0", "New Application Project (Application Project Details)", "NewAppProjectWizard", "ProjectDetailsPage");
selectTable("Create new", "New Application Project (Application Project Details)", "NewAppProjectWizard", "Table");
selectButton("Next", "New Application Project (Application Project Details)", "NewAppProjectWizard", "Button.NEXT");
selectTable("Create new", "New Application Project (Domain)", "NewAppProjectWizard", "Table");
selectButton("Next", "New Application Project (Domain)", "NewAppProjectWizard", "Button.NEXT");
selectButton("Finish", "New Application Project (Templates)", "NewAppProjectWizard", "Button.FINISH");
activateView("Explorer", "ProjectExplorer", "CTabItem.EXPLORER");
selectTreeTable("src", "lab1_system > lab1", EventType.DOUBLE_CLICK, "Explorer", "ProjectExplorer", "TreeViewer.NavigatorContentServiceContentProvider");
selectTreeTable("gpio_v4_8", "system_wrapper > ps7_cortexa9_0 > standalone_ps7_cortexa9_0 > bsp > ps7_cortexa9_0 > libsrc", "Explorer", "ProjectExplorer", "TreeViewer.NavigatorContentServiceContentProvider");
activateView("Explorer", "ProjectExplorer", "CTabItem.EXPLORER");
selectTreeTable("gpio_v4_8", "system_wrapper > ps7_cortexa9_0 > standalone_ps7_cortexa9_0 > bsp > ps7_cortexa9_0 > libsrc", EventType.DOUBLE_CLICK, "Explorer", "ProjectExplorer", "TreeViewer.NavigatorContentServiceContentProvider");
selectToolBarButton("Access commands and other items", "system_wrapper", "WorkbenchWindow", "ToolItem.ACCESS_COMMANDS");
setTextField("Ter", "system_wrapper", "Text", "Text");
selectTable("Views", "system_wrapper", "Table", "Table");
activateView("Terminal", "TerminalsView", "CTabItem.TERMINAL");
selectToolBarButton("Open a Terminal", "Terminal", "TerminalsView", "ToolItem.OPEN_A_TERMINAL");
selectButton("OK", "Launch Terminal", "LaunchTerminalSettingsDialog", "Button.OK");
selectToolBarButton("Disconnect Terminal Connection", "Terminal", "TerminalsView", "ToolItem.DISCONNECT_TERMINAL");
selectToolBarButton("Open a Terminal", "Terminal", "TerminalsView", "ToolItem.OPEN_A_TERMINAL");
selectButton("OK", "Launch Terminal", "LaunchTerminalSettingsDialog", "Button.OK");
selectToolBarButton("Open a Terminal", "Terminal", "TerminalsView", "ToolItem.OPEN_A_TERMINAL");
selectCombo("Serial Terminal", "Launch Terminal", "LaunchTerminalSettingsDialog", "Combo.CHOOSE_TERMINAL");
selectCombo("Other", "Launch Terminal", "LaunchTerminalSettingsDialog", "Combo.PORT");
setCombo("/dev/ttyS0", "Other", "SerialPortAddressDialog", "Combo");
selectButton("OK", "Other", "SerialPortAddressDialog", "Button.OK");
selectCombo("115200", "Launch Terminal", "LaunchTerminalSettingsDialog", "Combo.BAUD_RATE");
selectButton("OK", "Launch Terminal", "LaunchTerminalSettingsDialog", "Button.OK");
selectToolBarButton("Open a Terminal", "Terminal", "TerminalsView", "ToolItem.OPEN_A_TERMINAL");
activateView("Explorer", "ProjectExplorer", "CTabItem.EXPLORER");
closeView("Terminal", "TerminalsView", "CTabItem.TERMINAL");
selectToolBarMenuButton("Display Selected Console", "Explorer", "ConsoleView", "ToolItem.DISPLAY_SELECTED");
activateView("Console", "ConsoleView", "CTabItem.CONSOLE");
selectToolBarButton("Display Selected Console", "Console", "ConsoleView", "ToolItem.DISPLAY_SELECTED");
selectToolBarMenuButton("Display Selected Console", "Console", "ConsoleView", "ToolItem.DISPLAY_SELECTED");
selectToolBarButton("Access commands and other items", "lab1", "WorkbenchWindow", "ToolItem.ACCESS_COMMANDS");
selectTable("Previous Choices", "lab1", "Table", "Table");
activateView("Terminal", "TerminalsView", "CTabItem.TERMINAL");
selectToolBarButton("Access commands and other items", "lab1", "WorkbenchWindow", "ToolItem.ACCESS_COMMANDS");
setTextField("connect", "lab1", "Text", "Text");
activateView("Console", "ConsoleView", "CTabItem.CONSOLE");
activateView("lab1_system", "lab1_system/lab1_system.sprj", "SystemSettingsEditor", "CTabItem.LAB1_SYSTEM");
activateView("lab1", "lab1/lab1.prj", "SDXSettingsEditor", "CTabItem.LAB1");
selectToolBarButton("Open a Terminal", "Terminal", "TerminalsView", "ToolItem.OPEN_A_TERMINAL");
selectButton("Exit", "Confirm Exit", "MessageDialogWithToggle", "Button.EXIT");
// Exiting Xilinx Vitis with a status code '0' at 2/8/23, 4:46:26 PM CET
// Elapsed time: 00:26:17

